pipeline {
  agent {
    label "java_agent"
  }
  
  environment {
    
    PATH = "/apache-maven-3.9.9/bin:${env.PATH}"
    NEXUS_URL = 'http://52.66.116.134:8081/repository/carwebpagemaven/'
    NEXUS_CREDENTIALS = credentials('nexuscred') // Jenkins credentials for Nexus
    GROUP_ID = 'com.maven'
    ARTIFACT_ID = 'SimpleWebApplication'
    VERSION = '9.1.14-SNAPSHOT'
    //WAR_FILE_NAME = "SimpleWebApplication.war"
    WAR_FILE_NAME = "${ARTIFACT_ID}-${VERSION}.war"
    //TOMCAT_CREDENTIALS = credentials('tomcat-password')
  //  TOMCAT_URL = 'http://54.172.228.221:8080/'
 //   TOMCAT_WEBAPPS_DIR = '/opt/tomcat/apache-tomcat-10.1.30/webapps' // Define your Tomcat webapps directory here
   // WORKSPACE = '/home/tomcat/workspace/Javawebappproject'
    NEXUS_USERNAME = 'admin'
    NEXUS_PASSWORD = 'admin'
  }
  
  stages {
    stage('Build') {
      steps {
        sh 'mvn clean install'
      }
    }

    stage('Jacoco') {
      steps {
        jacoco()
      }
    }

    stage('SonarQube Analysis') {
      steps {
        script {
          def scannerHome = tool 'sonarqubescanner'
          withSonarQubeEnv('sonarqubeserver') {
            sh """
              ${scannerHome}/bin/sonar-scanner \
              -Dsonar.projectKey=javaapp \
              -Dsonar.projectName=javaapp \
              -Dsonar.projectVersion=1.0 \
              -Dsonar.java.binaries='target/classes'
            """
          }
        }
      }
    }

    stage("Sonar Quality Gate Check") {
      steps {
        timeout(time: 1, unit: 'MINUTES') {
          script {
            def qualityGate = waitForQualityGate()
            if (qualityGate.status != 'OK') {
              error "Pipeline aborted due to quality gate failure: ${qualityGate.status}"
            }
          }
        }
      }
    }

    stage('Upload to Nexus') {
      steps {
        nexusArtifactUploader artifacts: [[
          artifactId: 'SimpleWebApplication', 
          classifier: '', 
          file: 'target/SimpleWebApplication.war', 
          type: 'war'
        ]], 
        credentialsId: 'nexuscred', 
        groupId: 'com.maven', 
        nexusUrl: '52.66.116.134:8081', // Ensure protocol is included
        nexusVersion: 'nexus3', 
        protocol: 'http', 
        repository: 'carwebpagemaven', 
        version: '9.1.14-SNAPSHOT'
      }
    }

stage('Docker Build, Push, and Deploy') {
      agent { label 'java_agent' }  
      steps {
        script {
          // Build Docker image
          docker build -f benzcar --build-arg NEXUS_USERNAME=admin --build-arg NEXUS_PASSWORD=admin -t benzcarpage:1.2 .
          docker run -d -p 8080:8080 --name benzcarpage_container1 benzcarpage:1.2
          docker images
          docker login 52.66.116.134:5001
          docker tag benzcarpage:1.2 52.66.116.134:5001/repository/benzcarweb/benzcarpage:1.2
          docker push 52.66.116.134:5001/repository/benzcarweb/benzcarpage:1.2 
        }
      }
    }
  }
}
